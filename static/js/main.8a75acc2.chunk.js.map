{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","props","name","email","id","className","src","alt","CardList","robots","map","user","key","SearchBox","searchfield","searchChange","type","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","this","getRobots","fetch","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"0RAgBeA,EAdF,SAACC,GAAW,IAEhBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACE,yBAAKC,UAAU,oDACb,yBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,6BACE,4BAAKL,GACL,2BAAIC,MCaGK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEjB,OACE,6BAEIA,EAAOC,KAAK,SAAAC,GACV,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAKP,GACVA,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,aCAXU,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,yBAAKV,UAAU,OACb,2BACAA,UAAU,mCACVW,KAAK,OACLC,SAAUF,MCGDG,EATA,SAACjB,GAEd,OACE,yBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAClErB,EAAMsB,WCkDEC,G,wBA/Cb,aAAe,IAAD,8BACZ,+CAmBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAnBzC,EAAKC,MAAQ,CACXtB,OAAQ,GACRmB,YAAa,IAJH,E,iFASZI,KAAKC,c,sIAKmBC,MAAM,+C,cAAtBzB,E,0BACgBA,EAAO0B,Q,OAAvBC,E,OAENJ,KAAKL,SAAS,CAAElB,OAAQ2B,I,6FAOlB,IAAD,EACwBJ,KAAKD,MAA7BtB,EADA,EACAA,OAAQmB,EADR,EACQA,YACTS,EAAiB5B,EAAO6B,QAAO,SAAAC,GAEnC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAC9Bb,EAAYY,kBAIhB,OAAQ/B,EAAOiC,OAGb,yBAAKrC,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWU,aAAciB,KAAKP,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUhB,OAAQ4B,MANxB,2C,GAnCcM,cCFlBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.8a75acc2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n\r\n  const {name, email, id} = props\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bmw shadow-5\">\r\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"photod\"/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map( user => {\r\n          return (\r\n            <Card\r\n              key={user.id}\r\n              id={user.id}\r\n              name={user.name}\r\n              email={user.email}\r\n            />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n      className=\"pa3 ba b--green bg-lightest-blue\"\r\n      type=\"text\"\r\n      onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '3px solid black', height: '500px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport axios from 'axios'\r\nimport '../css/index.css'\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRobots()\r\n  }\r\n\r\n  async getRobots() {\r\n      // const robots = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n      const robots  = await fetch('https://jsonplaceholder.typicode.com/users');\r\n      const users   = await robots.json();\r\n\r\n      this.setState({ robots: users })\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({searchField: event.target.value})\r\n  }\r\n\r\n  render() {\r\n    const {robots, searchField } = this.state\r\n    const filteredRobots = robots.filter(robot => {\r\n\r\n      return robot.name.toLowerCase().includes(\r\n        searchField.toLowerCase()\r\n      );\r\n    });\r\n\r\n    return !robots.length ?\r\n    <h1>Loading</h1> :\r\n    (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n          <CardList robots={filteredRobots}/>\r\n        </Scroll>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'tachyons'\r\nimport App from './containers/App'\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}